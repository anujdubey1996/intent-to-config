apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "my-service-fullname" .}}
  labels:
    app: {{include "my-service-name" .}}
    helm: chart-name
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      app: {{include "my-service-name" .}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{.Values.maxUnavailable}}
      maxSurge: {{.Values.maxSurge}}

  template:
    metadata:
      labels:
        app: {{include "my-service-name" .}}

    spec:
      containers:
      - name: {{include "my-service-name" .}}
        image: {{.Values.container.image}}
        imagePullPolicy: {{.Values.container.imagePullPolicy}}
        ports:
          - name: http
            containerPort: {{.Values.container.httpPort}}
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: {{.Values.container.httpPort}}
        livenessProbe:
          httpGet:
            path: /health
            port: {{.Values.container.httpPort}}
        resources:
          limits:
            cpu: {{.Values.container.cpu}}
            memory: "{{.Values.container.memory}}"
          requests:
            cpu: {{.Values.container.cpu}}
            memory: "{{.Values.container.memory}}"