apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-postgres-db
  labels:
    app: my-pg-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-pg-db
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: my-pg-db
    spec:
      serviceAccountName: default
      containers:
      - name: my-pg-container
        image: postgres:13.3-alpine
        envFrom:
          - secretRef:
              name: db-credentials
              optional: true
        ports:
          - containerPort: 5432
        env:
          POSTGRES_USER: $(POSTGRES_USER_SECRET_KEY)
          POSTGRES_PASSWORD: $(POSTGRES_PASSWORD_SECRET_KEY)
          POSTGRES_DB: myappdb
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pg-data
        livenessProbe:
          tcpSocket:
            port: 5432
        readinessProbe:
          tcpSocket:
            port: 5432
      volumes:
      - name: pg-data
        persistentVolumeClaim:
          claimName: pg-storage