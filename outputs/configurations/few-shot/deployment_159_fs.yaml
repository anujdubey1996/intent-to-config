apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    k8s-app: prometheus
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      k8s-app: prometheus
  template:
    metadata:
      labels:
        k8s-app: prometheus
    spec:
      serviceAccountName: prometheus-sa
      containers:
        - name: prometheus
          image: prom/prometheus:v2.25.0
          ports:
            - name: http
              containerPort: 9090
            - name: metrics
              containerPort: 9091
          env:
            - name: RBAC_ENABLED
              value: "true"
            - name: ALERTMANAGER_URLS
              value: "http://alertmanager:9093"
            - name: SERVER_CONFIGS
              value: |
                --config.file=/etc/prometheus/prometheus.yml
              subResource: config
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
              subPath: prometheus.yml
            - name: alertmanager-config-volume
              mountPath: /etc/prometheus/alertmanager/
              subPath: alertmanager.yml
              readOnly: true
          envFrom:
            - secretRef:
                name: prometheus-credentials
                optional: true
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 200m
              memory: 100Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 3000
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-configuration
            items:
              - key: prometheus.yml
                path: prometheus.yml
        - name: alertmanager-config-volume
          configMap:
            name: alertmanager-configuration
            items:
              - key: alertmanager.yml
                path: alertmanager.yml
      readinessProbe:
        httpGet:
          path: /ready
          port: http
          host: prometheus
      livenessProbe:
        httpGet:
          path: /ready
          port: http
          host: prometheus
      nodeSelector:
        k8s-node-pool: monitoring-pool