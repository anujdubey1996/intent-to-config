apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-microservice.fullname" . }}
  labels:
    app: {{ include "my-microservice.name" . }}
    chart: {{ include "my-microservice.chart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "my-microservice.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: {{ .Values.strategyType }}
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Values.maxSurge }}
    blueGreen:
      deployment: {{ .Values.blueGreen.deployment }}
      annotation: {{ .Values.blueGreen.annotation }}
      strategy:
        active Annotation: {{ .Values.blueGreen.strategy.activeAnnotation }}
        preview Annotation: {{ .Values.blueGreen.strategy.previewAnnotation }}
        selector:
          matchLabels:
            release: {{ .Values.blueGreen.selector.release }}
            env: {{ .Values.blueGreen.selector.env }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "my-microservice.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
      terminationGracePeriodSeconds: 30