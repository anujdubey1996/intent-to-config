apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  annotations:
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: Helm
    cert-manager.io/cluster-issuer: {{ .Values.certmanager.issuer }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: {{ .Values.replicaController.type }}
    scaling:
      {{ toYaml .Values.replicaController.minScale }}
      {{ toYaml .Values.replicaController.maxScale }}
    rollingUpdate:
      maxUnavailable: {{ .Values.replicaController.maxUnavailable }}
      maxSurge: {{ .Values.replicaController.maxSurge }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount }}
      automountServiceAccountToken: {{ .Values.automountServiceAccount }}
      containerSecurityContext:
        runAsUser: {{ .Values.container.runAsUser }}
        runAsGroup: {{ .Values.container.runAsGroup }}
        allowedCapabilities:
        - {{ range .Values.container.allowedCapabilities }}  --cap-add={{ . }}\n  {{ end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      imagePullSecrets:
      - name: {{ .Values.imageRegistrySecret.name }}
      containers:
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.imageRegistrySecret.alwaysPull }}
        name: {{ .Release.Name }}
        args:
          {{- range .Values.container.command }} -- {{ . }}\n  {{ end }}
        command:
          {{- if .Values.container.command }}
            {{- range $key, $arg := .Values.container.command }}
            - {{ $arg | quote }}
            {{ end }}
          {{ else }}
            {{ toYaml .Values.container.entrypoint }}
          {{ end }}
        ports:
          {{- range $port := .Values.containers.ports }}
          - name: {{ .name }}
            containerPort: {{ .containerPort }}
            {{- if .hostPath }}
              hostPath:
                path: {{ .hostPath }}
            {{ end }}
          {{- end }}
        env:
          {{- if .Values.containerEnvVariables }}
          {{- range $k, $v := .Values.containerEnvVariables }}
          - name: {{ $k | quote }}
            value: {{ $v | quote }}
          {{- end }}
          {{ end }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
            {{- if .Values.resources.limits.gpu }}
              nvidia.com/gpu: {{ .Values.resources.limits.gpu }}
            {{ end }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
            {{- if .Values.resources.requests.gpu }}
              nvidia.com/gpu: {{ .Values.resources.requests.gpu }}
            {{ end }}
        volumes:
          {{- if .Values.volumes }}
          {{- range $vol := .Values.volumes }}
          {{ include "k8s/volumes/" $vol }}
          {{- end }}
          {{ end }}
      nodeSelector:
        {{- if .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml .Values.nodeSelector }}
        {{ end }}
      affinity:
        podAntiAffinity:
          {{- if and .Values.podAntiAffinity.preferred }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range $preferredMode := .Values.podAntiAffinity.preferred }}
          {{- include "k8s/affinity/" $preferredMode }}
          {{ end }}
          {{ end }}
        nodeAffinity:
          {{- if .Values.nodeAffinity }}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            {{- range $term := .Values.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution }}
            - matchExpressions:
              {{- range $op := $term.matchExpressions }}
              key: {{ $op.key | quote }}
              operator: {{ $op.operator | quote }}
              values:
              {{- range $v := $op.values }}
              - {{ $v | quote }}
              {{ end }}
            {{- end }}
          {{ end }}
          {{ end }}
      tolerations:
        {{- if .Values.tolerations }}
        tolerations:
        {{- range $tol := .Values.tolerations }}
        - effect: {{ $tol.effect | quote }}
          operator: {{ $tol.operator | quote }}
          key: {{ $tol.key | quote }}
          value: {{ $tol.value | quote }}
          {{- if $tol.tolerationSeconds }}
          tolerationSeconds: {{ $tol.tolerationSeconds }}
          {{- end }}
          {{- if $tol.tolerationTaints }}
          tolerationTaints:
          {{- range $taint := $tol.tolerationTaints }}
          - effect: {{ $taint.effect | quote }}
            key: {{ $taint.key | quote }}
            {{- if $taint.tolerationEffect }}
              tolerationEffect: {{ $taint.tolerationEffect }}
            {{ end }}
          {{ end }}
          {{- end }}
        {{ end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ .name }}
      {{ end }}
      {{ end }}