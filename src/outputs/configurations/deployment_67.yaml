apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
  labels:
    app: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
    spec:
      {{ if eq .Values.mongodb.innitVolumePermissions true }}
      initContainers:
        - name: volume-permissions
          image: busybox
          imagePullPolicy: {{ .Values.mongodb.pullPolicy | quote }}
          command: ["chown", "-R", "{{ .Values.mongodb.securityContext.runAsUser }}:{{ .Values.mongodb.securityContext.fsGroup }}", "{{ .Values.mongodb.mountPath }}"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: mongodb-data
              mountPath: {{ .Values.mongodb.mountPath }}
      {{ end }}
      containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}
          image: {{ .Values.mongodb.image }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
            - containerPort: 27017
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p
                  $MONGODB_PASSWORD --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          {{ if eq .Values.mongodb.securityContext.enabled true }}
          securityContext:
            runAsNonRoot: {{ .Values.mongodb.securityContext.runAsNonRoot }}
            runAsUser: {{ .Values.mongodb.securityContext.runAsUser }}
          {{ end }}
          volumeMounts:
            - mountPath: /var/lib/mongodb/data
              name: mongodb-data
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: {{ .Values.mongodb.appName }}-{{ .Values.wes.appName }}-volume

